// This file is part of coursework 2 for COMP1212
// which follows the book "The Elements of Computing Systems"
// by Nisan and Schocken,  MIT Press.
// Written by Sam Wilson

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then
 * the x value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM512 {
    IN x[16], load, address[9];
    OUT out[16];

    PARTS:

    DMux8Way(in=load, sel=address[6..8], s=a, t=b, u=c, v=d, w=e, x=f, y=g, z=h);

    RAM64(x=x, load=a, address=address[0..5], out=oa);
    RAM64(x=x, load=b, address=address[0..5], out=ob);
    RAM64(x=x, load=c, address=address[0..5], out=oc);
    RAM64(x=x, load=d, address=address[0..5], out=od);
    RAM64(x=x, load=e, address=address[0..5], out=oe);
    RAM64(x=x, load=f, address=address[0..5], out=of);
    RAM64(x=x, load=g, address=address[0..5], out=og);
    RAM64(x=x, load=h, address=address[0..5], out=oh);

    Mux8Way16(s=oa, t=ob, u=oc, v=od, w=oe, x=of, y=og, z=oh, sel=address[6..8], out=out);
}
